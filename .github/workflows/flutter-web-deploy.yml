name: Flutter Web Deploy to GitHub Pages

on:
  push:
    branches: [ '*' ]  # Ejecuta en todas las ramas
  pull_request:
    branches: [ main ]
  # Permite ejecutar este workflow manualmente desde la pesta√±a Actions
  workflow_dispatch:

# Configura permisos para GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  actions: write # Necesario para cancelar workflows

# Cancela workflows anteriores del mismo tipo cuando hay nuevos commits
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      branch-name: ${{ steps.branch-info.outputs.branch-name }}
      is-main: ${{ steps.branch-info.outputs.is-main }}
      sanitized-branch: ${{ steps.branch-info.outputs.sanitized-branch }}
    
    steps:
      - name: Cancel Previous Workflow Runs
        uses: styfle/cancel-workflow-action@0.12.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get branch information
        id: branch-info
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            BRANCH_NAME="${{ github.head_ref }}"
          else
            BRANCH_NAME="${{ github.ref_name }}"
          fi
          
          # Sanitizar nombre de rama para URL
          SANITIZED_BRANCH=$(echo "${BRANCH_NAME}" | sed 's/[^a-zA-Z0-9-]/-/g' | tr '[:upper:]' '[:lower:]')
          
          echo "branch-name=${BRANCH_NAME}" >> $GITHUB_OUTPUT
          echo "sanitized-branch=${SANITIZED_BRANCH}" >> $GITHUB_OUTPUT
          
          if [ "${BRANCH_NAME}" == "main" ]; then
            echo "is-main=true" >> $GITHUB_OUTPUT
          else
            echo "is-main=false" >> $GITHUB_OUTPUT
          fi
          
          echo "Building branch: ${BRANCH_NAME}"
          echo "Sanitized: ${SANITIZED_BRANCH}"

      # Cache para Flutter SDK
      - name: Cache Flutter SDK
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.tool_cache }}/flutter
          key: flutter-${{ runner.os }}-${{ hashFiles('pubspec.yaml') }}-3.35.4
          restore-keys: |
            flutter-${{ runner.os }}-${{ hashFiles('pubspec.yaml') }}-
            flutter-${{ runner.os }}-

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'
          channel: 'stable'
          cache: true

      # Cache para dependencias de pub
      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ${{ github.workspace }}/.packages
            ${{ github.workspace }}/.flutter-plugins
            ${{ github.workspace }}/.flutter-plugin-dependencies
            ${{ github.workspace }}/.dart_tool/package_config.json
          key: pub-${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            pub-${{ runner.os }}-

      - name: Create firebase_options.dart from secret
        run: |
          mkdir -p lib
          cat > lib/firebase_options.dart << 'EOF'
          ${{ secrets.FIREBASE_OPTIONS_DART }}
          EOF
          
          # Verify file was created and has content
          if [ ! -s lib/firebase_options.dart ]; then
            echo "Error: firebase_options.dart file is empty"
            exit 1
          fi
          
          echo "Firebase options file created successfully"

      - name: Create .env file from secret
        run: |
          cat > .env << 'EOF'
          ${{ secrets.DOT_ENV }}
          EOF
          echo ".env file created successfully"

      - name: Verify critical files
        run: |
          echo "Checking generated files..."
          ls -la lib/firebase_options.dart .env
          
          # Check if firebase_options.dart has the expected structure
          if grep -q "DefaultFirebaseOptions" lib/firebase_options.dart; then
            echo "‚úì firebase_options.dart contains DefaultFirebaseOptions class"
          else
            echo "‚úó firebase_options.dart does not contain DefaultFirebaseOptions class"
            exit 1
          fi

      - name: Get dependencies
        run: flutter pub get

      - name: Build web app
        run: |
          if [ "${{ steps.branch-info.outputs.is-main }}" == "true" ]; then
            # Build para main branch
            flutter build web --release --base-href "/docai/" --dart-define=FLUTTER_WEB_AUTO_DETECT=true
            echo "Built for main branch with base-href /docai/"
          else
            # Build para preview branches
            flutter build web --release --base-href "/docai/preview/${{ steps.branch-info.outputs.sanitized-branch }}/" --dart-define=FLUTTER_WEB_AUTO_DETECT=true
            echo "Built for preview branch with base-href /docai/preview/${{ steps.branch-info.outputs.sanitized-branch }}/"
          fi

      - name: Prepare deployment structure
        run: |
          mkdir -p deployment
          
          if [ "${{ steps.branch-info.outputs.is-main }}" == "true" ]; then
            # Para main: copiar directamente al root
            cp -r build/web/* deployment/
            
            # Crear directorio preview con p√°gina de √≠ndice
            mkdir -p deployment/preview
            cat > deployment/preview/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="es">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>DocAI - Previews de Ramas</title>
            <style>
              body { 
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; 
                margin: 0; padding: 40px 20px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh; color: #333;
              }
              .container { 
                max-width: 900px; margin: 0 auto; background: white; 
                border-radius: 20px; box-shadow: 0 20px 40px rgba(0,0,0,0.1); 
                overflow: hidden;
              }
              .header {
                background: linear-gradient(135deg, #4CAF50 0%, #45a049 100%);
                color: white; padding: 40px; text-align: center;
              }
              .header h1 { margin: 0; font-size: 2.5em; font-weight: 300; }
              .header p { margin: 10px 0 0 0; opacity: 0.9; font-size: 1.1em; }
              .content { padding: 40px; }
              .branch-card { 
                margin: 20px 0; padding: 25px; border-radius: 15px; 
                transition: all 0.3s ease; cursor: pointer;
                border: 2px solid transparent;
              }
              .branch-card:hover { 
                transform: translateY(-2px); 
                box-shadow: 0 10px 25px rgba(0,0,0,0.1);
              }
              .main-app { background: linear-gradient(135deg, #e8f5e8 0%, #d4edda 100%); }
              .main-app:hover { border-color: #4CAF50; }
              .preview { background: linear-gradient(135deg, #f0f8ff 0%, #e1ecf4 100%); }
              .preview:hover { border-color: #2196F3; }
              .branch-title { 
                font-size: 1.4em; font-weight: 600; margin: 0 0 10px 0; 
                display: flex; align-items: center;
              }
              .branch-title .icon { margin-right: 10px; font-size: 1.2em; }
              .branch-link { 
                color: #1976d2; text-decoration: none; font-weight: 600;
                display: inline-flex; align-items: center; gap: 8px;
                padding: 8px 16px; background: rgba(25, 118, 210, 0.1);
                border-radius: 25px; transition: all 0.2s ease;
              }
              .branch-link:hover { 
                background: rgba(25, 118, 210, 0.2); 
                transform: translateX(5px);
              }
              .branch-desc { margin: 15px 0 0 0; color: #666; line-height: 1.5; }
              .last-updated { 
                text-align: center; margin-top: 40px; padding-top: 30px; 
                border-top: 1px solid #eee; color: #999; font-size: 0.9em;
              }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="header">
                <h1>üè• DocAI</h1>
                <p>Previews de Desarrollo Disponibles</p>
              </div>
              <div class="content">
                <div class="branch-card main-app" onclick="window.open('/docai/', '_blank')">
                  <div class="branch-title">
                    <span class="icon">üöÄ</span>
                    Aplicaci√≥n Principal (Main)
                  </div>
                  <a href="/docai/" class="branch-link">
                    üåê Abrir DocAI
                    <span>‚Üí</span>
                  </a>
                  <div class="branch-desc">
                    Versi√≥n de producci√≥n estable con todas las funcionalidades probadas.
                  </div>
                </div>
                
                <div class="branch-card preview">
                  <div class="branch-title">
                    <span class="icon">üîç</span>
                    Previews de Ramas de Desarrollo
                  </div>
                  <div class="branch-desc">
                    <p><strong>Ramas disponibles para preview:</strong></p>
                    <ul style="margin: 15px 0; padding-left: 20px;">
                      <li><strong>theme-translations</strong>: <a href="/docai/preview/theme-translations/" class="branch-link">Ver Preview ‚Üí</a></li>
                    </ul>
                    <p><em>Las previews se generan autom√°ticamente cuando se hace push a cada rama.</em></p>
                  </div>
                </div>
              </div>
              <div class="last-updated">
                Actualizado autom√°ticamente ‚Ä¢ DocAI ¬© 2024
              </div>
            </div>
          </body>
          </html>
          EOF
            
          else
            # Para otras ramas: crear estructura de preview
            mkdir -p deployment/preview/${{ steps.branch-info.outputs.sanitized-branch }}
            cp -r build/web/* deployment/preview/${{ steps.branch-info.outputs.sanitized-branch }}/
          fi
          
          echo "Deployment structure prepared"
          ls -la deployment/

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: deployment

  # Deploy unificado - solo para push events
  deploy:
    if: github.event_name == 'push'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Comentario en PR con informaci√≥n del preview
  comment-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const branchName = '${{ needs.build.outputs.branch-name }}';
            const sanitizedBranch = '${{ needs.build.outputs.sanitized-branch }}';
            const previewUrl = `https://oriolgds.github.io/docai/preview/${sanitizedBranch}/`;
            
            const body = `## üè• DocAI Preview Build
            
            ‚ú® **Preview estar√° disponible tras el merge**: ${previewUrl}
            
            üì± **Qu√© incluye este PR:**
            - Branch: \`${branchName}\`
            - Build autom√°tico con Flutter 3.35.4
            - Preview independiente en subdirectorio
            
            üîó **Enlaces √∫tiles:**
            - [üìã Ver todas las previews](https://oriolgds.github.io/docai/preview/)
            - [üöÄ App principal](https://oriolgds.github.io/docai/)
            
            > üí° El preview se actualiza autom√°ticamente con cada commit a esta rama.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
