name: Flutter Web Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Permite ejecutar este workflow manualmente desde la pestaña Actions
  workflow_dispatch:

# Configura permisos para GitHub Pages  
permissions:
  contents: read
  pages: write
  id-token: write
  actions: write  # Necesario para cancelar workflows

# Cancela workflows anteriores del mismo tipo cuando hay nuevos commits
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true  # Cambiado a true para cancelar workflows anteriores

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Cancel Previous Workflow Runs
      uses: styfle/cancel-workflow-action@0.12.0
      with:
        access_token: ${{ github.token }}
    
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.4'  # Usa la versión estable más reciente
        channel: 'stable'
    
    - name: Create firebase_options.dart from secret
      run: |
        mkdir -p lib
        cat > lib/firebase_options.dart << 'EOF'
        ${{ secrets.FIREBASE_OPTIONS_DART }}
        EOF
        
        # Verify file was created and has content
        if [ ! -s lib/firebase_options.dart ]; then
          echo "Error: firebase_options.dart file is empty"
          exit 1
        fi
        
        echo "Firebase options file created successfully"
        echo "File size: $(wc -c < lib/firebase_options.dart) bytes"
        echo "Lines: $(wc -l < lib/firebase_options.dart)"
    
    - name: Create .env file from secret
      run: |
        cat > .env << 'EOF'
        ${{ secrets.DOT_ENV }}
        EOF
        
        echo ".env file created successfully"
        echo "File size: $(wc -c < .env) bytes"
    
    - name: Verify critical files
      run: |
        echo "Checking generated files..."
        ls -la lib/firebase_options.dart .env
        
        # Check if firebase_options.dart has the expected structure
        if grep -q "DefaultFirebaseOptions" lib/firebase_options.dart; then
          echo "✓ firebase_options.dart contains DefaultFirebaseOptions class"
        else
          echo "✗ firebase_options.dart does not contain DefaultFirebaseOptions class"
          echo "Content preview (first 10 lines):"
          head -n 10 lib/firebase_options.dart
          exit 1
        fi
        
        # Check for common syntax issues
        if grep -q "import.*firebase_core" lib/firebase_options.dart; then
          echo "✓ firebase_options.dart contains Firebase Core import"
        else
          echo "✗ firebase_options.dart missing Firebase Core import"
          exit 1
        fi
    
    - name: Get dependencies
      run: flutter pub get

    
    - name: Build web app
      run: |
        flutter build web --release --base-href "/docai/"
    
    - name: Upload build artifacts
      uses: actions/upload-pages-artifact@v3
      with:
        path: build/web

  deploy:
    # Solo ejecuta el deploy en push a main, no en pull requests
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4